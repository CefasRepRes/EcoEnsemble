(.packages())
.packages()
?()
library(EcoEnsemble)
priors <- EnsemblePrior(3,
ind_st_params = IndSTPrior("hierarchical",list(-3, 1, 8, 4),list(0.1,0.1,0.1,0.1),AR_params=c(10,2)),
ind_lt_params = IndLTPrior("beta",list(1,1),list(matrix(5, 3, 3), matrix(1, 3, 3))),
sha_st_params = ShaSTPrior("lkj",list(1,10),1,AR_params=c(10,2)),
sha_lt_params = 5
)
prior_density <- prior_ensemble_model(priors, M = 4)
ex.fit <- rstan::extract(prior_density$samples)
f <- fun(ex.fit)
devtools::install(quick = TRUE)
devtools::install(quick = TRUE)
(.packages())
library(EcoEnsemble)
priors <- EnsemblePrior(3,
ind_st_params = IndSTPrior("hierarchical",list(-3, 1, 8, 4),list(0.1,0.1,0.1,0.1),AR_params=c(10,2)),
ind_lt_params = IndLTPrior("beta",list(1,1),list(matrix(5, 3, 3), matrix(1, 3, 3))),
sha_st_params = ShaSTPrior("lkj",list(1,10),1,AR_params=c(10,2)),
sha_lt_params = 5
)
prior_density <- prior_ensemble_model(priors, M = 4)
ex.fit <- rstan::extract(prior_density$samples)
SIGMA <- ex.fit$SIGMA[true_par,,]
true_par <-which.max(ex.fit$lp__)
SIGMA <- ex.fit$SIGMA[true_par,,]
SIGMA
priors <- EnsemblePrior(3,
ind_st_params = IndSTPrior("hierarchical",list(-3, 1, 8, 4),list(0.1,0.1,0.1,0.1),AR_params=c(10,2)),
ind_lt_params = IndLTPrior("beta",list(1,1),list(matrix(5, 3, 3), matrix(1, 3, 3))),
sha_st_params = ShaSTPrior("lkj",list(1,10),1,AR_params=c(10,2)),
sha_lt_params = 5
)
prior_density <- prior_ensemble_model(priors, M = 4)
prior_density <- prior_ensemble_model(priors, M = 4)
true_par <-which.max(ex.fit$lp__)
SIGMA <- ex.fit$SIGMA[true_par,,]
SIGMA
latent[1,1:N] <- rnorm((M+2)*N, 0, 1)
M <_ 3
M <- 3
N <- 4
latent <- matrix(NA, Time, (M+2)*N)
true_par <-which.max(ex.fit$lp__)
Time <- 50
latent[1,1:N] <- rnorm((M+2)*N, 0, 1)
latent <- matrix(NA, Time, (M+2)*N)
true_par <-which.max(ex.fit$lp__)
SIGMA <- ex.fit$SIGMA[true_par,,]
latent[1,1:N] <- rnorm((M+2)*N, 0, 1)
latent[1,] <- rnorm((M+2)*N, 0, 1)
?chol
chol(SIGMA)
cholly_cholly_sigma <- chol(SIGMA)
cholly_cholly_sigma %*% rnorm(N, 0, 1)
cholly_cholly_sigma %*% t(rnorm(N, 0, 1))
cholly_cholly_sigma %*% rnorm(N, 0, 1)
cholly_cholly_sigma %*% rnorm((M+2)*N, 0, 1)
cholly_cholly_sigma %*% t(rnorm((M+2)*N, 0, 1))
cholly_cholly_sigma %*% matrix(rnorm((M+2)*N, 0, 1), nrcol=1)
cholly_cholly_sigma %*% matrix(rnorm((M+2)*N, 0, 1), ncol=1)
dim(cholly_cholly_sigma)
dim(matrix(rnorm((M+2)*N, 0, 1), ncol=1))
M <- 4
N <- 3
latent <- matrix(NA, Time, (M+2)*N)
true_par <-which.max(ex.fit$lp__)
SIGMA <- ex.fit$SIGMA[true_par,,]
cholly_cholly_sigma <- chol(SIGMA)
latent[1,] <- rnorm((M+2)*N, 0, 1)
cholly_cholly_sigma %*% rnorm(N, 0, 1)
dim(matrix(rnorm((M+2)*N, 0, 1), ncol=1))
dim(cholly_cholly_sigma)
cholly_cholly_sigma %*% rnorm(N, 0, 1)
cholly_cholly_sigma %*% t(rnorm(N, 0, 1))
cholly_cholly_sigma %*% matrix(rnorm(N, 0, 1), ncol=1)
cholly_cholly_sigma %*% matrix(rnorm(N, 0, 1), ncol=18)
dim(cholly_cholly_sigma)
dim(cholly_cholly_sigma)
dim(rnorm(N, 0, 1))
cholly_cholly_sigma %*% rnorm((M+2)*N, 0, 1)
for (t in 2:Time) {
latent[t,] <- latent[t-1,] +cholly_cholly_sigma %*% rnorm((M+2)*N, 0, 1)
}
source('C:/Users/JM34/OneDrive - CEFAS/EcoEnsemble Priors/Synthetic data/get_params.R')
f <- fun(ex.fit)
f <- fun(ex.fit, Time = 50, N = d, M = M)
d <- 3; M <- 4
priors <- EnsemblePrior(d,
ind_st_params = IndSTPrior("hierarchical",list(-3, 1, 8, 4),list(0.1,0.1,0.1,0.1),AR_params=c(10,2)),
ind_lt_params = IndLTPrior("beta",list(1,1),list(matrix(5, d, d), matrix(1, d, d))),
sha_st_params = ShaSTPrior("lkj",list(1,10),1,AR_params=c(10,2)),
sha_lt_params = 5
)
prior_density <- prior_ensemble_model(priors, M = 4)
ex.fit <- rstan::extract(prior_density$samples)
f <- fun(ex.fit, Time = 50, N = d, M = M)
true_latent <- f
no_model_uncert$truth <- true_latent[,1:4]
library(EcoEnsemble)
d <- 3; M <- 4
priors <- EnsemblePrior(d,
ind_st_params = IndSTPrior("hierarchical",list(-3, 1, 8, 4),list(0.1,0.1,0.1,0.1),AR_params=c(10,2)),
ind_lt_params = IndLTPrior("beta",list(1,1),list(matrix(5, d, d), matrix(1, d, d))),
sha_st_params = ShaSTPrior("lkj",list(1,10),1,AR_params=c(10,2)),
sha_lt_params = 5
)
prior_density <- prior_ensemble_model(priors, M = 4)
ex.fit <- rstan::extract(prior_density$samples)
Time <- 50
f <- fun(ex.fit, Time = Time, N = d, M = M)
