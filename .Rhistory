example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
use_gpl3_license()
library(devtools)
use_gpl3_license()
use_test()
roxygen2::roxygenise()
devtools::test()
devtools::install(quick=FALSE)
roxygen2::roxygenise()
devtools::install()
devtools::build_manual()
?try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
?try(roxygen2::roxygenize(load_code = sourceDir))
try(roxygen2::roxygenize(load_code = sourceDir))
example(source)
try(roxygen2::roxygenize(load_code = sourceDir))
sourceDir
sourceDir()
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
getwd()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(EcoEnsemble)
?EcoEnsemble::elicit_priors
library(EcoEnsemble)
?EcoEnsemble::elicit_priors
priors <- elicit_priors(ind_st_var_params = list(25, 0.25),
ind_st_cor_form = "lkj", #Using an LKJ distribution for individual short-term discrepancies
ind_st_cor_params = 30, #The parameter is 30
ind_lt_var_params = list(rep(25,N_species),rep(0.25,N_species)),
ind_lt_cor_form = "beta", #For long term discrepancies we use a Beta distribution
ind_lt_cor_params = list(matrix(40,N_species, N_species), matrix(40, N_species, N_species)),
sha_st_var_exp = 3,
sha_st_cor_form = "lkj",
sha_st_cor_params = 30,
sha_lt_sd = rep(4,N_species))
library(EcoEnsemble)
priors <- elicit_priors(ind_st_var_params = list(25, 0.25),
ind_st_cor_form = "lkj", #Using an LKJ distribution for individual short-term discrepancies
ind_st_cor_params = 30, #The parameter is 30
ind_lt_var_params = list(rep(25,N_species),rep(0.25,N_species)),
ind_lt_cor_form = "beta", #For long term discrepancies we use a Beta distribution
ind_lt_cor_params = list(matrix(40,N_species, N_species), matrix(40, N_species, N_species)),
sha_st_var_exp = 3,
sha_st_cor_form = "lkj",
sha_st_cor_params = 30,
sha_lt_sd = rep(4,N_species))
devtools::build_manual()
devtools::install(quick=TRUE)
library(EcoEnsemble)
elicit_prior
elicit_priors
?elicit_priors
devtools::install(quick=TRUE)
devtools::install(quick=TRUE)
library(EcoEnsemble)
?elicit_priors
elicit_priors
library(EcoEnsemble)
EcoEnsemble::elicit_priors()
?EcoEnsemble::elicit_priors()
?fit_ensemble_model
N_species <- 4
priors <- elicit_priors(ind_st_var_params = list(25, 0.25),
ind_st_cor_form = "lkj",
ind_st_cor_params = 30,
ind_lt_var_params = list(rep(25,N_species),rep(0.25,N_species)),
ind_lt_cor_form = "beta",
ind_lt_cor_params = list(matrix(40,N_species, N_species), matrix(40, N_species, N_species)),
sha_st_var_exp = 3,
sha_st_cor_form = "lkj",
sha_st_cor_params = 30,
sha_lt_sd = rep(4,N_species))
fit <- fit_ensemble_model(observations = list(SSB_obs, Sigma_obs),
simulators = list(list(SSB_ewe, Sigma_ewe, "EwE"),
list(SSB_fs,  Sigma_fs, "FishSUMS"),
list(SSB_lm,  Sigma_lm, "LeMans"),
list(SSB_miz, Sigma_miz, "Mizer")),
priors = priors,
full_sample = FALSE, #Only optimise in this case
control = list(adapt_delta = 0.99) #Additional STAN options)
)
N_species <- 4
priors <- elicit_priors(ind_st_var_params = list(25, 0.25),
ind_st_cor_form = "lkj",
ind_st_cor_params = 30,
ind_lt_var_params = list(rep(25,N_species),rep(0.25,N_species)),
ind_lt_cor_form = "beta",
ind_lt_cor_params = list(matrix(40,N_species, N_species), matrix(40, N_species, N_species)),
sha_st_var_exp = 3,
sha_st_cor_form = "lkj",
sha_st_cor_params = 30,
sha_lt_sd = rep(4,N_species))
priors
class(priors)
fit <- fit_ensemble_model(observations = list(SSB_obs, Sigma_obs),
simulators = list(list(SSB_ewe, Sigma_ewe, "EwE"),
list(SSB_fs,  Sigma_fs, "FishSUMS"),
list(SSB_lm,  Sigma_lm, "LeMans"),
list(SSB_miz, Sigma_miz, "Mizer")),
priors = priors,
full_sample = FALSE, #Only optimise in this case
control = list(adapt_delta = 0.99) #Additional STAN options))
)
fit <- fit_ensemble_model(observations = list(SSB_obs, Sigma_obs),
simulators = list(list(SSB_ewe, Sigma_ewe, "EwE"),
list(SSB_fs,  Sigma_fs, "FishSUMS"),
list(SSB_lm,  Sigma_lm, "LeMans"),
list(SSB_miz, Sigma_miz, "Mizer")),
priors = priors,
full_sample = FALSE)
fit
plot_values(fit)
?fit
generate_sample(fit, 1)
sam <- generate_sample(fit, 1)
plot_values(fit, sam, 1)
roxygen2::roxygenise()
devtools::install()
traceback()
sam
plot_values(fit, sam, 1)
library(EcoEnsemble)
plot_values(fit, sam, 1)
load("~/EcoEnsemble/data/northseamsy.RData")
roxygen2::roxygenise()
devtools::install()
install.packages("gplot")
Sigma_ewe
SSB_ewe
SSB_ewe
SSB_fs
roxygen2::roxygenise()
devtools::install()
library(EcoEnsemble)
roxygen2::roxygenise()
devtools::install()
roxygen2::roxygenise()
?SSB_obs
devtools::install()
library(EcoEnsemble)
?generate_sample()
