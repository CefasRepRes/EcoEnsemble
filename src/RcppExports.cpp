// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "EcoEnsemble_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// KalmanFilter_back
Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic> KalmanFilter_back(const Eigen::Matrix<double, Eigen::Dynamic, 1>& rhos, const Eigen::Matrix<double, Eigen::Dynamic, 1>& dee, const Eigen::Matrix<double, Eigen::Dynamic, 1>& R, const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& Q, const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& C, const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& P, const Eigen::Matrix<double, Eigen::Dynamic, 1>& xhat, const int& Time, const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& y, const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& obs, std::ostream* pstream__);
RcppExport SEXP _EcoEnsemble_KalmanFilter_back(SEXP rhosSEXP, SEXP deeSEXP, SEXP RSEXP, SEXP QSEXP, SEXP CSEXP, SEXP PSEXP, SEXP xhatSEXP, SEXP TimeSEXP, SEXP ySEXP, SEXP obsSEXP, SEXP pstream__SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, 1>& >::type rhos(rhosSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, 1>& >::type dee(deeSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, 1>& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& >::type Q(QSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& >::type C(CSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, 1>& >::type xhat(xhatSEXP);
    Rcpp::traits::input_parameter< const int& >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>& >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< std::ostream* >::type pstream__(pstream__SEXP);
    rcpp_result_gen = Rcpp::wrap(KalmanFilter_back(rhos, dee, R, Q, C, P, xhat, Time, y, obs, pstream__));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4ensemble_model_mod();
RcppExport SEXP _rcpp_module_boot_stan_fit4ensemble_prior_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_EcoEnsemble_KalmanFilter_back", (DL_FUNC) &_EcoEnsemble_KalmanFilter_back, 11},
    {"_rcpp_module_boot_stan_fit4ensemble_model_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4ensemble_model_mod, 0},
    {"_rcpp_module_boot_stan_fit4ensemble_prior_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4ensemble_prior_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_EcoEnsemble(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
